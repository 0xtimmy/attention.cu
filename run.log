nvcc -o testall.exe ./testall.cu
C:\Users\Timot\git\attention.cu\tests\../include/algebra.h(250): warning #177-D: variable "scale" was declared but never referenced
          int scale = sizea/sizeb;
              ^

Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"

C:\Users\Timot\git\attention.cu\tests\../include/algebra.h(384): warning #177-D: variable "batchsize" was declared but never referenced
                  int batchsize = size / batches;
                      ^

C:\Users\Timot\git\attention.cu\tests\../include/algebra.h(591): warning #177-D: variable "layer_idx" was declared but never referenced
          int layer_idx = idx % layersize;
              ^

C:\Users\Timot\git\attention.cu\tests\../include/algebra.h(640): warning #177-D: variable "splitsize" was declared but never referenced
          int splitsize = size;
              ^

testall.cu
tmpxft_00021d58_00000000-10_testall.cudafe1.cpp
   Creating library testall.lib and object testall.exp
./testall.exe
x:
[[[[0.000000, 0.000000]
, [1.000000, 1.000000]
], [[0.000000, 0.000000]
, [1.000000, 1.000000]
], [[0.000000, 0.000000]
, [1.000000, 1.000000]
]], [[[1.000000, 1.000000]
, [2.000000, 2.000000]
], [[1.000000, 1.000000]
, [2.000000, 2.000000]
], [[1.000000, 1.000000]
, [2.000000, 2.000000]
]], [[[2.000000, 2.000000]
, [3.000000, 3.000000]
], [[2.000000, 2.000000]
, [3.000000, 3.000000]
], [[2.000000, 2.000000]
, [3.000000, 3.000000]
]], [[[3.000000, 3.000000]
, [4.000000, 4.000000]
], [[3.000000, 3.000000]
, [4.000000, 4.000000]
], [[3.000000, 3.000000]
, [4.000000, 4.000000]
]]]
y[0]
[[[[0.000000, 0.000000]
], [[0.000000, 0.000000]
], [[0.000000, 0.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[2.000000, 2.000000]
], [[2.000000, 2.000000]
], [[2.000000, 2.000000]
]], [[[3.000000, 3.000000]
], [[3.000000, 3.000000]
], [[3.000000, 3.000000]
]]]
y[1]
[[[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[2.000000, 2.000000]
], [[2.000000, 2.000000]
], [[2.000000, 2.000000]
]], [[[3.000000, 3.000000]
], [[3.000000, 3.000000]
], [[3.000000, 3.000000]
]], [[[4.000000, 4.000000]
], [[4.000000, 4.000000]
], [[4.000000, 4.000000]
]]]
y:
[[[[1.000000, 2.000000]
], [[1.000000, 2.000000]
], [[1.000000, 2.000000]
]], [[[3.000000, 5.000000]
], [[3.000000, 5.000000]
], [[3.000000, 5.000000]
]], [[[5.000000, 8.000000]
], [[5.000000, 8.000000]
], [[5.000000, 8.000000]
]], [[[7.000000, 11.000000]
], [[7.000000, 11.000000]
], [[7.000000, 11.000000]
]]]
batched_mul:
[1.000000, 2.000000]

y grad:

<y> = add( x[0] x[1].mul(multiplicant) )
[[[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]]]
<x[0]> = split( x )
[[[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]]]
<x> = ( )
[[[[0.000000, 0.000000]
, [0.000000, 0.000000]
], [[1.000000, 1.000000]
, [1.000000, 1.000000]
], [[2.000000, 2.000000]
, [2.000000, 2.000000]
]], [[[3.000000, 3.000000]
, [3.000000, 3.000000]
], [[4.000000, 4.000000]
, [4.000000, 4.000000]
], [[5.000000, 5.000000]
, [5.000000, 5.000000]
]], [[[6.000000, 6.000000]
, [6.000000, 6.000000]
], [[7.000000, 7.000000]
, [7.000000, 7.000000]
], [[8.000000, 8.000000]
, [8.000000, 8.000000]
]], [[[9.000000, 9.000000]
, [9.000000, 9.000000]
], [[10.000000, 10.000000]
, [10.000000, 10.000000]
], [[11.000000, 11.000000]
, [11.000000, 11.000000]
]]]
<x[1].mul(multiplicant)> = mul( x[1] multiplicant )
[[[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]], [[[1.000000, 1.000000]
], [[1.000000, 1.000000]
], [[1.000000, 1.000000]
]]]
<x[1]> = split( x )
[[[[1.000000, 2.000000]
], [[1.000000, 2.000000]
], [[1.000000, 2.000000]
]], [[[1.000000, 2.000000]
], [[1.000000, 2.000000]
], [[1.000000, 2.000000]
]], [[[1.000000, 2.000000]
], [[1.000000, 2.000000]
], [[1.000000, 2.000000]
]], [[[1.000000, 2.000000]
], [[1.000000, 2.000000]
], [[1.000000, 2.000000]
]]]
<x> = ( )
[[[[0.000000, 0.000000]
, [0.000000, 0.000000]
], [[1.000000, 1.000000]
, [1.000000, 1.000000]
], [[2.000000, 2.000000]
, [2.000000, 2.000000]
]], [[[3.000000, 3.000000]
, [3.000000, 3.000000]
], [[4.000000, 4.000000]
, [4.000000, 4.000000]
], [[5.000000, 5.000000]
, [5.000000, 5.000000]
]], [[[6.000000, 6.000000]
, [6.000000, 6.000000]
], [[7.000000, 7.000000]
, [7.000000, 7.000000]
], [[8.000000, 8.000000]
, [8.000000, 8.000000]
]], [[[9.000000, 9.000000]
, [9.000000, 9.000000]
], [[10.000000, 10.000000]
, [10.000000, 10.000000]
], [[11.000000, 11.000000]
, [11.000000, 11.000000]
]]]
<multiplicant> = ( )
[30.000000, 30.000000]


[1;32m[PASSED][0m split
